language: rust
sudo: false

INSTALL_NODE_VIA_NVM: &INSTALL_NODE_VIA_NVM
  |
    rustup target add wasm32-unknown-unknown
    curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
    source ~/.nvm/nvm.sh
    nvm install lts/carbon

# Cache `cargo install`ed tools, but don't cache the project's `target`
# directory (which ends up over-caching and filling all disk space!)
cache:
  directories:
    - /home/travis/.cargo

GH_TOKEN: &GH_TOKEN
  secure: "fYSpXV6lwWPJX3MOKV6M9ckqW1JAR31v3SLAF9YxxBwDnZHI5wJuGl5eLUQ/SmQN0ki66ST8VqrrNv6oqWKboglBU6zNDrqTCDIiIpn0SFNhp3zMINsWzUc90+Z2VEzJIgI5SXHYh+mN/wJBXLu7GQLKQ0+fgeB5vWj3sPMvSWo8mbR5qyfeTbDi6Ip9VGw8FDEwPyunXL0VgYRKiizJbzEXKq0i/6BAJgbZ83WyRuC4EOoG9r3JzBbhtwSIWwHD/NdUXVpy6kgVBRUy1E+ol+GZb1ad2SoJ+0y1toYHUKCY+dX5qOg9ECetXWjKCB4teTqim9+NAdGxR/XoLE4ZsjEGIBC1MrPSf6d7SyO0ZwMGx1wOH0o63x8fD8Uh3hBr/+kqGtpTwp6Q/rjGNajwbESkORVhXZ+Zrdj48m87J8dCfanaOHDy05N/SGQCL0V7BYxggHnMtrYSXSb4DCPL+FlwrCJdr3ycXwZEfErcnyxfHDHcmUhsUazFsqRFKr3X3JBHPY6mAwlCs0y2HtuGT7bJv+2+RBFAy2f3PEBi4A4+IAGhPOqWa4F5/OFtDnaqAfSk1sF3n497Eojv6Kmq/chr90uzhVliMvRNDYLpiUxzKSRksQAFhweajy2EvIFuN8XjNOOmoCHn1IKGQQlApN3alfd4ZK2b8tkGJSPxtxg="

DEPLOY_TO_GITHUB: &DEPLOY_TO_GITHUB
  before_deploy:
    - git config --local user.name "Ashley Williams"
    - git config --local user.email "ashley666ashley@gmail.com"
    - name="wasm-pack-$TRAVIS_TAG-$TARGET"
    - mkdir $name
    - cp target/$TARGET/release/wasm-pack $name/
    - cp README.md LICENSE-MIT LICENSE-APACHE $name/
    - tar czvf $name.tar.gz $name
  deploy:
    provider: releases
    api_key: *GH_TOKEN
    file: wasm-pack-$TRAVIS_TAG-$TARGET.tar.gz
    skip_cleanup: true
    on:
      branch: master
      tags: true

matrix:
  include:

  # tests pass
  - env: JOB=test RUST_BACKTRACE=1
    rust: nightly
    addons:
      firefox: latest
      chrome: stable
    install:
      - *INSTALL_NODE_VIA_NVM
    script:
    - cargo test --locked
    - rustup component add rustfmt-preview
    - cargo fmt --all -- --check

  # book
  - env: JOB=book
    rust: stable
    before_script:
    - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
    - (test -x $HOME/.cargo/bin/mdbook || cargo install --vers "^0.1" mdbook)
    - cargo install-update -a
    script:
    - (cd docs && mdbook build)
    - rustc ./docs/installer/build-installer.rs
    - ./build-installer
    deploy:
      provider: pages
      skip-cleanup: true
      github-token: *GH_TOKEN
      local-dir: docs/book
      keep-history: false
      on:
        branch: master

  # dist linux binary
  - env: JOB=dist-linux TARGET=x86_64-unknown-linux-musl
    rust: nightly
    before_script: rustup target add $TARGET
    script: cargo build --release --target $TARGET --locked --features vendored-openssl
    addons:
      apt:
        packages:
          - musl-tools
    <<: *DEPLOY_TO_GITHUB

  # dist OSX binary
  - env: JOB=dist-osx MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
    os: osx
    rust: nightly
    script: cargo build --release --target $TARGET --locked
    install: true
    <<: *DEPLOY_TO_GITHUB

notifications:
  email:
    on_success: never
