language: rust
sudo: false

# Cache `cargo install`ed tools, but don't cache the project's `target`
# directory (which ends up over-caching and filling all disk space!)
cache:
  directories:
    - /home/travis/.cargo

GH_TOKEN: &GH_TOKEN
  secure: "qRpMVUD2U621L0UQ2FaG4B828jGF8BKRt6lpAzrg/indp2Ly4/VIw6fFQ3yB/SBsT9SV3TmKSAATXvM3e68iyfBJT+no+r9lsAohZE/xxOvxLLzQ44ls9Lr1WjU9LVENxDPsIV4Q2hDe3MYhGIzEBorHNJxrC5IJvZU3Ge6bYyLdzkhmEJPOONQXdyYUjnz8d+3CZ7VVcefS5toVefL0RQ5x+1b6VnMZsCVwB/JT/+EXS1m/Y7pfEM/AocPeSioCiZAyf5CV3TS1KkT2WXOlBRc7Jqz5niAYR047amAZkYKkldVHkzeeEC6otjUN/Al3pONxaZv6WRlhnuIEtZ0yOP5EqOPJ+KhpRdOYuq0aNqPngrE9g0MqQZEL6acHit2LSypjZjGp9b6hk1eWRA1lxRCdBfOFfbIq1QjwTEMueHNHNvhNToqBMPS2fYxFfHVvoduqY9Y/gqaWAX+fxR7oKST52KaYbpfqppuwD4R8p+VDWCrMuLP4EW7kY3q7wBrExSSBH4C0Ubhrbs7+RhaGNOBA3YkUNtL8U1ya0VVVT6JqSzHEMETb6jh1QDs8dH3/X12RuNtpODTi4pEsdCHlob5HTPKxlOMRmT8tECFF1Pqxuhp+HRWhJx8gL3Sgo3hSokVSAWQYgrWb/ao/QQg1vNyzkPrStyyPQvlSu9EVfUk="

DEPLOY_TO_GITHUB: &DEPLOY_TO_GITHUB
  before_deploy:
    - git config --local user.name "Ashley Williams"
    - git config --local user.email "ashley666ashley@gmail.com"
    - name="wasm-pack-$TRAVIS_TAG-$TARGET"
    - mkdir $name
    - cp target/$TARGET/release/wasm-pack $name/
    - cp README.md LICENSE-MIT LICENSE-APACHE $name/
    - tar czvf $name.tar.gz $name
  deploy:
    provider: releases
    api_key: *GH_TOKEN
    file: wasm-pack-$TRAVIS_TAG-$TARGET.tar.gz
    skip_cleanup: true
    on:
      branch: installer
      tags: true

matrix:
  include:

  # tests pass

  - env: JOB=test RUST_BACKTRACE=1
    rust: nightly
    script:
    - cargo test --locked
    - rustup component add rustfmt-preview
    - cargo fmt --all -- --check

  # book
  - env: JOB=book
    rust: stable
    before_script:
    - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
    - (test -x $HOME/.cargo/bin/mdbook || cargo install --vers "^0.1" mdbook)
    - cargo install-update -a
    script:
    - (cd docs && mdbook build)
    - cp -r docs/installer docs/book
    - cp docs/wasm-pack-init.sh docs/book
    deploy:
      provider: pages
      skip-cleanup: true
      github-token: *GH_TOKEN
      local-dir: docs/book
      keep-history: false
      on:
        branch: master
        tags: true

  # dist linux binary
  - env: JOB=dist-linux TARGET=x86_64-unknown-linux-musl
    rust: nightly
    before_script: rustup target add $TARGET
    script: cargo build --release --target $TARGET --locked --features vendored-openssl
    addons:
      apt:
        packages:
          - musl-tools
    <<: *DEPLOY_TO_GITHUB

  # dist OSX binary
  - env: JOB=dist-osx MACOSX_DEPLOYMENT_TARGET=10.7 TARGET=x86_64-apple-darwin
    os: osx
    rust: nightly
    script: cargo build --release --target $TARGET --locked
    install: true
    <<: *DEPLOY_TO_GITHUB

notifications:
  email:
    on_success: never
